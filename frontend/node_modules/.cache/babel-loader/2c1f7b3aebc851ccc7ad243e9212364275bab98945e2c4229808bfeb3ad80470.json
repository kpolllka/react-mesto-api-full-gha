{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url;\n    this._headers = headers;\n  }\n  _getResponse(res) {\n    //проверка на ошибку\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getUserInfo() {\n    //для получения данных о пользователе\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/users/me', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._getResponse(res));\n  }\n  getCardsInfo() {\n    //для получения карточек с сервера\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/cards', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._getResponse(res));\n  }\n  setUserEdit(item) {\n    //для изменения профиля\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/users/me', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name: item.name,\n        about: item.about\n      })\n    }).then(res => this._getResponse(res));\n  }\n  setAvatarEdit(_ref2) {\n    let {\n      avatar\n    } = _ref2;\n    //для изменения аватара\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(res => this._getResponse(res));\n  }\n  createNewCards(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    //для добавления новой карточки\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/cards', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => this._getResponse(res));\n  }\n  delCard(cardId) {\n    //для удаления карточки\n    const token = localStorage.getItem('token');\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._getResponse(res));\n  }\n  _addLike(cardId) {\n    //для добавления лайков\n    const token = localStorage.getItem('token');\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._getResponse(res));\n  }\n  _removeLike(cardId) {\n    //для удаления лайков\n    const token = localStorage.getItem('token');\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._getResponse(res));\n  }\n  toggleLike(cardId, isLike) {\n    return isLike ? this._removeLike(cardId) : this._addLike(cardId); //аналог записи в комменте ниже\n    // if (isLike) {\n    //   return this._removeLike(cardId);\n    // } else {\n    //   return this._addLike(cardId);\n    // }\n  }\n}\n\nconst api = new Api({\n  url: 'https://aaa2208bek.nomoredomains.work'\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","url","headers","_url","_headers","_getResponse","res","ok","Promise","reject","status","json","getUserInfo","token","localStorage","getItem","fetch","method","Authorization","then","getCardsInfo","setUserEdit","item","body","JSON","stringify","name","about","setAvatarEdit","_ref2","avatar","createNewCards","_ref3","link","delCard","cardId","_addLike","_removeLike","toggleLike","isLike","api"],"sources":["C:/Users/sabri/Desktop/react-mesto-api-full-gha15/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _getResponse(res) {//проверка на ошибку\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  getUserInfo() { //для получения данных о пользователе\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/users/me', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => this._getResponse(res));\n  }\n\n  getCardsInfo() { //для получения карточек с сервера\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/cards', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => this._getResponse(res));\n  }\n\n  setUserEdit(item) { //для изменения профиля\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/users/me', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ name: item.name, about: item.about })\n    }).then((res) => this._getResponse(res));\n  }\n\n  setAvatarEdit({avatar}) { //для изменения аватара\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ avatar: avatar })\n    }).then((res) => this._getResponse(res));\n  }\n\n  createNewCards ({name, link}) { //для добавления новой карточки\n    const token = localStorage.getItem('token');\n    return fetch(this._url + '/cards', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ name: name, link: link })\n    }).then((res) => this._getResponse(res));\n  }\n\n  delCard(cardId){ //для удаления карточки\n    const token = localStorage.getItem('token');\n    return fetch (`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => this._getResponse(res));\n  }\n\n  _addLike(cardId) { //для добавления лайков\n    const token = localStorage.getItem('token');\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => this._getResponse(res));\n  }\n\n  _removeLike(cardId) { //для удаления лайков\n    const token = localStorage.getItem('token');\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => this._getResponse(res));\n  }\n\n  toggleLike(cardId, isLike) {\n    return isLike ? this._removeLike(cardId) : this._addLike(cardId); //аналог записи в комменте ниже\n    // if (isLike) {\n    //   return this._removeLike(cardId);\n    // } else {\n    //   return this._addLike(cardId);\n    // }\n  }\n}\n\nconst api = new Api({\n  url: 'https://aaa2208bek.nomoredomains.work',\n  },\n);\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}